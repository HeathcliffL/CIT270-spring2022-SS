apiVersion: apps/v1 #version of API we are useing
kind: Deployment #This can be a statefulset, or deployment, a deployment doesn't need a hard drive that sticks around
metadata:
  #This is the name of the deployment
  name: heath-cit270
spec:
  replicas: 1
  selector:
    matchLabels:
      app: heath-cit270
  template:
    metadata:
      labels:
        app: heath-cit270
    spec:
      containers:
        - name: heath-cit270
          #This is the Dockerhub url to my image
          image: heathl/cit270
          #this is the command to run once the container start
          command: ['npm']
          #There are the arguments to pass the command when the container start
          args: ['run', 'start']
          # this is the port my conatiner is listening on, ex: 443
          ports:
            - containerPort: 3000
          resources:
            limits:
              #this is the Max CPU (in cores) my container can use
              cpu: '.125'
              #this is the max memory (in millibytes)
              memory: '500Mi'
            requests:
              #this is the minimum CPU (in cores) my container can use
              cpu: '.1'
              #this is the minimum memory (in millibytes)
              memory: '250Mi'
          livenessProbe:
            httpGet:
              #This is the url to call to see if my API is running
              path: /
              #This is the port to use to see if my API is running
              port: 3000
              #This is the protocol to use to see if my API is running
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              #This is the url to call to see if my API is started
              path: /
              #This is the port to use to see if my API is started
              port: 3000
              #This is the protocol to use to see if my API is started
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
#this is the start of a new document for the load Balancer
---
apiVersion: v1
kind: Service
metadata:
  name: heath-cit270-loadbalancer
spec:
  selector:
    app: heath-cit270
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: heath-cit270-ingress
  namespace: heath-cit270
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: 'nginx'
    cert-manager.io/cluster-issuer: 'letsencrypt-cluster-issuer'
spec:
  tls:
    - hosts:
        - heathnodejs.cit270.com
      secretName: heath-cit270-tls
  rules:
    - host: heathnodejs.cit270.com
      http:
        paths:
          - backend:
            serviceName: heath-cit270-loadbalancer
            servicePort: 80
